<local:Document x:Class="Vista.RetencionImpuesto"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vista" xmlns:local1="clr-namespace:Vista.Gestion.ModelRetencionImpuestos"
                mc:Ignorable="d"
        Title="Retencion Impuesto" Height="439.333" Width="1000.667"  WindowStartupLocation="CenterScreen" Closing="Window_Closing" Loaded="Window_Loaded">
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommandsRet.Exit" CanExecute="ExitCommand_CanExecute" Executed="ExitCommand_Executed" />
    </Window.CommandBindings>
    <Window.DataContext>
        <local1:ModelRetencionImpuestos/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="TextBlockStyleValidation" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--<Style x:Key="TextBlockStyleComboBoxValidation" TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">

            <Style.Triggers>

                <Trigger Property="Validation.HasError" Value="true">

                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent}"/>

                </Trigger>

            </Style.Triggers>

        </Style>
        <Style x:Key="ComboBoxStyles" TargetType="{x:Type ComboBox}">

            <Style.Triggers>

                <Trigger Property="Validation.HasError" Value="true">

                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent}"/>

                </Trigger>

            </Style.Triggers>

        </Style>

    </Window.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0"  >

            <DataGrid Background="#FFE5E5E5" ItemsSource="{Binding Path=ModelRetencionImpuestos}" x:Name="dgRetencionImp" BorderThickness="1" BorderBrush="LightGray" ColumnWidth="*" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="311" VerticalAlignment="Top" Width="922" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" BeginningEdit="dgRetencionImp_BeginningEdit" CanUserDeleteRows="False"  Foreground="Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" GridLinesVisibility="All" VerticalGridLinesBrush="Gray" HorizontalGridLinesBrush="Gray" SelectionMode="Single" SelectionUnit="FullRow" >

                <DataGrid.CellStyle>

                    <Style TargetType="{x:Type DataGridCell}" >
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="#FF74C1FF" />
                                <Setter Property="Foreground"
                     Value="Black" />


                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Height" Value="25"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                        <Setter Property="Content" Value="Center"></Setter>



                    </Style>

                </DataGrid.CellStyle>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="White" />
                                <Setter Property="Foreground"
                     Value="Black" />

                            </Trigger>


                        </Style.Triggers>

                        <Setter Property="Tag" 
            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, 
                            Path=DataContext}"/>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu DataContext="{Binding PlacementTarget.Tag, 
                                               RelativeSource={RelativeSource Self}}">

                                    <MenuItem Header="Eliminar" Command="local:CustomCommandsRet.Exit" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataSource}" Value="N">
                                <Setter Property="Background" Value="White"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>

                    <Style x:Key="CenterCellStyle" TargetType="DataGridCell">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Grid Background="{TemplateBinding Background}" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="auto" ></ContentPresenter>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="#FF74C1FF" />
                                <Setter Property="Foreground"
                     Value="Black" />


                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    


                    <Style x:Key="TextBoxStyle" TargetType="TextBox">
                        <Setter Property="Background" Value="#FF74C1FF"></Setter>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Codigo Retencion" Width="auto"  x:Name="codigo"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Foreground="Black" Text="{Binding Path=WTCode,UpdateSourceTrigger=PropertyChanged,ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Name="CodRetencion"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=WTCode,UpdateSourceTrigger=PropertyChanged}" Name="CodRetencion" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Inactivo" Width="auto" x:Name="inactivo">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                                <CheckBox Name="inactivos"  Style="{StaticResource ResourceKey=CheckBoxStyle}" IsChecked="{Binding Path=Inactive,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Checked="inactivos_Checked" Unchecked="inactivos_Unchecked" IsThreeState="False" PreviewMouseLeftButtonDown="inactivos_PreviewMouseLeftButtonDown" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" >
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate >
                                <CheckBox Name="inactivos" IsChecked="{Binding Path=Inactive,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Checked="inactivos_Checked" Unchecked="inactivos_Unchecked" IsThreeState="False" PreviewMouseLeftButtonDown="inactivos_PreviewMouseLeftButtonDown" VerticalAlignment="Center" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" >
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>


                    <!--<DataGridTextColumn Binding="{Binding WTName}" Width="Auto" Header="Impto. Retencion" x:Name="ImptRetencion"></DataGridTextColumn>-->

                    <DataGridTemplateColumn Header="Retencion Imp" Width="auto"  x:Name="ImptRetencion"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path=WTName,UpdateSourceTrigger=PropertyChanged}" Name="ImptRetencion"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=WTName,UpdateSourceTrigger=PropertyChanged}" Name="ImptRetencion" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Categoria" Width="Auto"  x:Name="cbCategorias">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Path=CategoryList,Mode=TwoWay}" SelectedValue="{Binding Path=Category,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=Category,UpdateSourceTrigger=PropertyChanged}" IsEditable="False" IsReadOnly="True"  Foreground="Black" Style="{StaticResource ComboBoxStyle}"></ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=Category,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Tipo Base" Width="Auto"  x:Name="cbTipoBases">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Path=TipoBaseList,Mode=TwoWay}" SelectedValue="{Binding Path=BaseType,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=BaseType,UpdateSourceTrigger=PropertyChanged}" IsEditable="False" IsReadOnly="True"  Foreground="Black" Style="{StaticResource ComboBoxStyle}"></ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=BaseType,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <!--<DataGridComboBoxColumn x:Name="cbCategoria" ItemsSource="{Binding ListCategoria}" Header="Categoria" Width="auto" DisplayMemberPath="{Binding Path=Category}" SelectedValueBinding="{Binding Path=Category,UpdateSourceTrigger=PropertyChanged}" CellStyle="{StaticResource CenterCellStyle}" EditingElementStyle="{StaticResource ComboBoxStyle}">

                    </DataGridComboBoxColumn>
                    <DataGridComboBoxColumn x:Name="cbTipoBase" ItemsSource="{Binding ListTipoBase}" Header="Tipo Base" Width="auto"  DisplayMemberPath="{Binding Path=BaseType}" SelectedValueBinding="{Binding Path=BaseType,UpdateSourceTrigger=PropertyChanged}" EditingElementStyle="{StaticResource ComboBoxStyle}" >

                    </DataGridComboBoxColumn>-->
                    <DataGridTemplateColumn Width="Auto" Header="Valido Desde" x:Name="ValidoDesde">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <DatePicker SelectedDate="{Binding Path=EffecDate,StringFormat={}{0:dd/MM/yyyy},UpdateSourceTrigger=PropertyChanged}">
                                    <DatePicker.Resources>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="CornerRadius" Value="3"/>
                                        </Style>
                                    </DatePicker.Resources>
                                </DatePicker>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Path=EffecDate,StringFormat={}{0:dd/MM/yyyy},UpdateSourceTrigger=PropertyChanged}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="T/C" Width="auto"  x:Name="tc"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path=Rate,UpdateSourceTrigger=PropertyChanged}" Name="tc"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=Rate,UpdateSourceTrigger=PropertyChanged}" Name="tc" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn Binding="{Binding Rate}" Width="auto" Header="T/C" x:Name="TC"></DataGridTextColumn>-->

                    <DataGridTemplateColumn Header="% Importe Base" Width="auto"  x:Name="importeBase"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path=PrctBsAmnt,UpdateSourceTrigger=PropertyChanged}" Name="importeBase"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=PrctBsAmnt,UpdateSourceTrigger=PropertyChanged}" Name="importeBase" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Codigo Oficial" Width="auto"  x:Name="codigoOficial"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path=Offclcode,UpdateSourceTrigger=PropertyChanged}"  x:Name="codigoOficial"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=Offclcode,UpdateSourceTrigger=PropertyChanged}" x:Name="codigoOficial" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Cuenta" Width="auto"  x:Name="acctCode" >
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <Border BorderThickness="1" BorderBrush="Gray" CornerRadius="3" x:Name="bd" >
                                    <DockPanel Grid.Row="1" Grid.Column="1" x:Name="dp" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                        <Image PreviewMouseLeftButtonDown="imgAccount_PreviewMouseLeftButtonDown" DockPanel.Dock="Right" Source="lupa.png" Width="20" x:Name="imgAccount" Visibility="Visible" Cursor="Hand" />
                                        <TextBox x:Name="txtAccount" FontSize="10" HorizontalAlignment="Stretch" Foreground="Black" Text="{Binding Path=Account, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle}"   BorderBrush="Gray" BorderThickness="0"  Width="auto" KeyDown="txtAccount_KeyDown" />
                                    </DockPanel>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path=Account,UpdateSourceTrigger=PropertyChanged}" x:Name="txtAccount" Style="{StaticResource TextBlockStyle}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Tipo Retencion" Width="Auto"  x:Name="cbTipoRetencion">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Path=TipoRetencionList,Mode=TwoWay}" SelectedValue="{Binding Path=U_IDA_TipoRetencion,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=U_IDA_TipoRetencion,UpdateSourceTrigger=PropertyChanged}" IsEditable="False" IsReadOnly="True"  Foreground="Black" Style="{StaticResource ComboBoxStyle}"></ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=U_IDA_TipoRetencion,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridComboBoxColumn x:Name="cbTipoRetencion" ItemsSource="{Binding ListTipoRetencion}" Header="Tipo Retencion" DisplayMemberPath="{Binding Path=U_IDA_TipoRetencion,UpdateSourceTrigger=PropertyChanged}" SelectedValueBinding="{Binding Path=U_IDA_TipoRetencion,UpdateSourceTrigger=PropertyChanged}" Width="auto" CellStyle="{StaticResource CenterCellStyle}" EditingElementStyle="{StaticResource ComboBoxStyle}" >

                    </DataGridComboBoxColumn>-->

                    <DataGridTemplateColumn Header="Base Minima" Width="auto"  x:Name="baseMinima"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path= U_IDA_BaseMinima,UpdateSourceTrigger=PropertyChanged}"  x:Name="baseMinima"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path= U_IDA_BaseMinima,UpdateSourceTrigger=PropertyChanged}" x:Name="baseMinima" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Sustraendo" Width="auto"  x:Name="sustraendo"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="Black" Text="{Binding Path= U_IDA_Sustraendo,UpdateSourceTrigger=PropertyChanged}"  x:Name="sustraendo"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path= U_IDA_Sustraendo,UpdateSourceTrigger=PropertyChanged}" x:Name="sustraendo" Style="{StaticResource TextBoxStyle}" ></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Button x:Name="btnOk" Content="OK" HorizontalAlignment="Left" Margin="0,342,0,0" VerticalAlignment="Top" Width="85" Padding="3" FontSize="16" Click="btnOk_Click"/>
            <Button x:Name="btnCancelar" Content="Cancelar" HorizontalAlignment="Left" Margin="108,342,0,0" VerticalAlignment="Top" Width="89" Padding="3" FontSize="16" Background="Gray" BorderBrush="Gray" Click="btnWindow_Close" />

        </Grid>
    </ScrollViewer >
</local:Document>
