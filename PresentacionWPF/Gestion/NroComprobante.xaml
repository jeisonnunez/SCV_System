<local:Document x:Class="Vista.NroComprobante"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Vista" xmlns:local1="clr-namespace:Vista.Gestion.ValidateErrorsNroComprobante"
        mc:Ignorable="d"
        Title="NroComprobante" Height="447.333" Width="680" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded" Closing="Window_Closing">

    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.Exit" CanExecute="ExitCommand_CanExecute" Executed="ExitCommand_Executed" />
    </Window.CommandBindings>
    <Window.DataContext>
        <local1:ValidateErrorsNroComprobante/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="TextBlockStyleValidation" TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--<Style x:Key="TextBlockStyleComboBoxValidation" TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">

            <Style.Triggers>

                <Trigger Property="Validation.HasError" Value="true">

                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent}"/>

                </Trigger>

            </Style.Triggers>

        </Style>
        <Style x:Key="ComboBoxStyles" TargetType="{x:Type ComboBox}">

            <Style.Triggers>

                <Trigger Property="Validation.HasError" Value="true">

                    <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent}"/>

                </Trigger>

            </Style.Triggers>

        </Style>

    </Window.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0">

            <DataGrid x:Name="dgComprobante" ItemsSource="{Binding Path=ValidateErrorsNroComprobante}" BorderThickness="1" BorderBrush="LightGray" ColumnWidth="*" SelectionMode="Single" SelectionUnit="FullRow" GridLinesVisibility="All" VerticalGridLinesBrush="Gray" HorizontalGridLinesBrush="Gray" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="311"  VerticalAlignment="Top" Width="566" BeginningEdit="dgComprobante_BeginningEdit" CanUserResizeRows="True" CanUserSortColumns="True" CanUserDeleteRows="False" Foreground="Black" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Background="#FFE5E5E5">
                <DataGrid.CellStyle>

                    <Style TargetType="{x:Type DataGridCell}" >
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="#FF74C1FF" />
                                <Setter Property="Foreground"
                     Value="Black" />


                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Height" Value="25"></Setter>
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                        <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
                        <Setter Property="TextBlock.VerticalAlignment" Value="Center"></Setter>
                        <Setter Property="Content" Value="Center"></Setter>



                    </Style>

                </DataGrid.CellStyle>

                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="White" />
                                <Setter Property="Foreground"
                     Value="Black" />

                            </Trigger>


                        </Style.Triggers>

                        <Setter Property="Tag" 
            Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, 
                            Path=DataContext}"/>
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu DataContext="{Binding PlacementTarget.Tag, 
                                               RelativeSource={RelativeSource Self}}">

                                    <MenuItem Header="Eliminar" Command="local:CustomCommands.Exit" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>

                    </Style>

                </DataGrid.RowStyle>
                <DataGrid.Resources>
                    <Style x:Key="TaxTextBoxStyle" TargetType="TextBox">
                        <Setter Property="Background" Value="#FF74C1FF"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=Canceled}" Value="N">
                                <Setter Property="IsReadOnly" Value="False" />
                                <Setter Property="Background" Value="#FF74C1FF"></Setter>


                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=Canceled}" Value="Y">
                                <Setter Property="IsReadOnly" Value="True" />
                                <Setter Property="Background" Value="#FF74C1FF"></Setter>


                            </DataTrigger>

                        </Style.Triggers>
                    </Style>

                    <Style x:Key="TextBoxStyle" TargetType="TextBox">
                        <Setter Property="Background" Value="#FF74C1FF"></Setter>
                    </Style>

                    <Style x:Key="CenterCellStyle" TargetType="DataGridCell">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Grid Background="{TemplateBinding Background}" >
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="auto" ></ContentPresenter>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                 Value="True">
                                <Setter Property="Background"
                     Value="#FF74C1FF" />
                                <Setter Property="Foreground"
                     Value="Black" />


                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </DataGrid.Resources>
                <DataGrid.Columns>

                    <DataGridTemplateColumn Header="Codigo" Width="auto"  x:Name="codigo" >
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Foreground="Black" Text="{Binding Path=Code ,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TaxTextBoxStyle}"  Name="txtCodeCurrency"  PreviewTextInput="txtCodeCurrency_PreviewTextInput"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Foreground="Black" Text="{Binding Path=Code,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Name="txtCodeCurrency"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>

                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Nombre de Serie" Width="Auto"  x:Name="name">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=NombreSerie,  UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Style="{StaticResource TextBoxStyle}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=NombreSerie,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Tipo Serie" Width="Auto"  x:Name="tipoSerie">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox ItemsSource="{Binding Path=TipoSerieList,Mode=TwoWay}" SelectedValue="{Binding Path=TipoSerie,UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding Path=TipoSerie,UpdateSourceTrigger=PropertyChanged}" IsEditable="False" IsReadOnly="True"  Foreground="Black" Style="{StaticResource ComboBoxStyle}"></ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=TipoSerie,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Binding="{Binding NombreSerie}" Header="Nombre de Serie" Width="Auto" ></DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Descripcion}"  Width="Auto" Header="Descripcion" x:Name="descripcion"></DataGridTextColumn>

                    <!--<DataGridComboBoxColumn  x:Name="cbTipoSerie"  ItemsSource="{Binding Path=ListTipoSerie}"   Header="Tipo Serie" DisplayMemberPath="{Binding Path=TipoSerie,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" SelectedValueBinding="{Binding Path=TipoSerie,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Width="auto"  EditingElementStyle="{StaticResource ComboBoxStyle}"  >-->
                        <!--<DataGridComboBoxColumn.ElementStyle>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip"
                    Value="{Binding RelativeSource={RelativeSource Self},
                Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=LostFocus}"/>
                                    </Trigger>

                                </Style.Triggers>
                            </Style>
                        </DataGridComboBoxColumn.ElementStyle>
                        <DataGridComboBoxColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                     Value="True">
                                        <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent,UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridComboBoxColumn.CellStyle>



                    </DataGridComboBoxColumn>-->


                    <DataGridTemplateColumn Header="Inicio" Width="Auto" x:Name="inicio">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox  Text="{Binding Path=Inicio,  UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Style="{StaticResource TextBoxStyle}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}"   Text="{Binding Path=Inicio,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn Binding="{Binding Inicio}" Width="Auto" Header="Inicio"  ></DataGridTextColumn>-->

                    <DataGridTemplateColumn Header="Siguiente" Width="Auto" x:Name="siguiente">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Siguiente,  UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Style="{StaticResource TextBoxStyle}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}" Text="{Binding Path=Siguiente,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--<DataGridTextColumn Binding="{Binding Siguiente}" Width="Auto" Header="Siguiente" x:Name="siguiente"></DataGridTextColumn>-->

                    <DataGridTemplateColumn Header="Fin" Width="Auto" x:Name="fin">
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding Path=Fin,  UpdateSourceTrigger=PropertyChanged}" Foreground="Black" Style="{StaticResource TextBoxStyle}"></TextBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource ResourceKey=TextBlockStyleValidation}"  Text="{Binding Path=Fin,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Foreground="Black"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!--<DataGridTextColumn Binding="{Binding Fin}" Width="Auto" Header="Fin" x:Name="fin"></DataGridTextColumn>-->
                    <DataGridTemplateColumn Header="Activo" Width="auto" x:Name="activos" >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox Name="activo" Style="{StaticResource ResourceKey=CheckBoxStyle}" IsChecked="{Binding Path=Activo,  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Checked="activo_Checked" Unchecked="activo_Unchecked" PreviewMouseLeftButtonDown="activo_PreviewMouseLeftButtonDown" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center" IsThreeState="False">
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <CheckBox Name="activo" IsChecked="{Binding Path=Activo,  UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True}" Checked="activo_Checked" Unchecked="activo_Unchecked" PreviewMouseLeftButtonDown="activo_PreviewMouseLeftButtonDown" VerticalAlignment="Center" VerticalContentAlignment="Center" HorizontalAlignment="Center" HorizontalContentAlignment="Center" IsThreeState="False">
                                </CheckBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>
            <Button x:Name="btnOk" Content="OK" HorizontalAlignment="Left" Margin="0,342,0,0" VerticalAlignment="Top" Width="85" Padding="3" FontSize="16" Click="btnOk_Click"/>
            <Button x:Name="btnCancelar" Content="Cancelar" HorizontalAlignment="Left" Margin="110,342,0,0" VerticalAlignment="Top" Width="89" Padding="3" FontSize="16" Background="Gray" BorderBrush="Gray" Click="btnWindow_Close"/>

        </Grid>
    </ScrollViewer>
</local:Document>
